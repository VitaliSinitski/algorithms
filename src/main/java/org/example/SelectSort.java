package org.example;

import java.util.Arrays;

public class SelectSort {
    public static void main(String[] args) {
        int[] array = {3, 6, 82, 24, 14, 28, 2, 9, 27, 10, 4, 42};
        selectSort(array);
        System.out.println(Arrays.toString(array));
    }

    /*
     * Объявляем переменную min для хранения индекса минимального элемента.
     * Внешний цикл выполняется для каждого элемента массива.
     * Внутри внешнего цикла:
     * - Инициализируем min текущим индексом i.
     * - Внутренний цикл выполняется для поиска минимального элемента среди оставшихся элементов.
     * - Если найден элемент, меньший текущего минимального, обновляем индекс min.
     * - После завершения внутреннего цикла вызываем метод swap для обмена текущего элемента с найденным минимальным элементом.
     * Повторяем эти шаги для каждого элемента, чтобы отсортировать массив по возрастанию.
     */
    private static void selectSort(int[] array) {
        int min;  // Переменная для хранения индекса минимального элемента
        for (int i = 0; i < array.length; i++) {  // Внешний цикл для прохода по всем элементам массива
            min = i;  // Инициализируем минимальный элемент текущим индексом
            for (int j = i + 1; j < array.length; j++) {  // Внутренний цикл для поиска минимального элемента среди оставшихся элементов
                if (array[j] < array[min]) {  // Если найден элемент, меньший текущего минимального
                    min = j;  // Обновляем индекс минимального элемента
                }
            }
            swap(array, i, min);  // Меняем местами текущий элемент и найденный минимальный элемент
        }
    }


    private static void swap(int[] array, int ind1, int ind2) {  // Метод для обмена элементов массива
        int temp = array[ind1];  // Сохраняем значение текущего элемента во временной переменной
        array[ind1] = array[ind2];  // Заменяем текущий элемент на элемент с другим индексом
        array[ind2] = temp;  // Заменяем элемент с другим индексом на сохраненное значение
    }
}
