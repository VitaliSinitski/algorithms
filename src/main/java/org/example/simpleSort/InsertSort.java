package org.example.simpleSort;

import java.util.Arrays;

public class InsertSort {
    public static void main(String[] args) {
        int[] array = {3, 6, 82, 24, 14, 28, 2, 9, 27, 10, 4, 42};
        insertSort(array);
        System.out.println(Arrays.toString(array));
    }

    /*
     * Внешний цикл начинается со второго элемента (индекс 1) и продолжается до конца массива.
     * Внутри внешнего цикла:
     * - Сохраняем текущий элемент во временной переменной temp.
     * - Инициализируем переменную j значением текущего индекса i.
     * - Внутренний цикл выполняется, пока j больше 0 и элемент array[j - 1] больше temp.
     * - Внутри внутреннего цикла сдвигаем элементы массива вправо, чтобы освободить место для вставки temp.
     * - Уменьшаем индекс j на 1, чтобы перейти к предыдущему элементу.
     * - После выхода из внутреннего цикла, вставляем temp в правильную позицию в массиве.
     * Повторяем эти шаги для каждого элемента, пока весь массив не будет отсортирован.
     */
    private static void insertSort(int[] array) {
        for (int i = 1; i < array.length; i++) { // Начинаем неотсортированную часть с 1-ого элемента. 0-ой элемент - это считается отсортированная часть.
            int temp = array[i];  // Сохраняем текущий элемент во временную переменную
            int j = i;  // Инициализируем переменную j значением текущего индекса
            while (j > 0 && array[j - 1] > temp) {  // Пока предыдущий элемент больше временной переменной и не достигнут начало массива
                array[j] = array[j - 1];  // Сдвигаем элементы массива вправо
                j--;  // Уменьшаем индекс j
            }
            array[j] = temp;  // Вставляем временную переменную в правильную позицию
        }
    }

}
